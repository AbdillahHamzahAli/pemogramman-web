@import url("https://fonts.googleapis.com/css2?family=Geist+Mono:wght@100..900&display=swap");

body {
  font-family: "Geist Mono", monospace;
  background-color: #0f0f0f;
}

* {
  margin: 0;
  padding: 0;
  text-decoration: none;
  color: #d4d4d4;
}

.container {
  max-width: 95rem;
  display: flex;
  flex-direction: column;
  padding: 1rem 2rem;
  margin: 0 auto;
}

.btn {
  padding: 0.5rem 1rem;
  border: 1px solid #333;
  font-size: 0.875rem;
}

.btn:hover {
  border-color: #555;
}

header {
  max-width: 95rem;
  padding: 1rem 2rem;
  margin: 0 auto;
}

header > div {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

nav {
  display: flex;
  gap: 1rem;
}

.nav-item {
  color: #888;
}

section {
  width: 100%;
  padding: 4rem 0;
  /* min-height: 100vh; */
}

section.hero {
  padding-top: 8rem;
}

.hero {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 2rem;
}

.hero-content > *,
.section-content > * {
  margin-bottom: 2rem;
}

.hero-title {
  font-weight: 400;
  font-size: 36px;
  line-height: 1.25;
}

.section-title {
  font-weight: 500;
  font-size: 1.5rem;
  margin-bottom: 3rem;
}

.hero-description {
  color: #888;
  margin-bottom: 4rem;
}

.hero-example {
  /* width: 100%; */
  padding: 0 1rem;
  display: flex;
  flex-direction: column;
}

.hero-example-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  border: 1px solid #333;
  padding: 1rem;
  background-color: #1e1e1e;
  margin-bottom: 1rem;
}

.hero-example-title {
  font-size: 1rem;
  font-weight: 500;
}

.hero-example-description {
  color: #888;
  font-size: 0.75rem;
  font-weight: 300;
}
/* 
.hero-example img {
  width: 100%;
  height: 100%;
  object-fit: cover;
} */

.features > .section-content {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1rem;
}

.feature-item {
  border: 1px solid #333;
  border-style: dashed;
  padding: 1rem;
  margin-bottom: 0.5rem;
}

.feature-item:hover {
  border-color: #555;
}

.feature-item > * {
  margin-bottom: 1rem;
}

.feature-title {
  font-weight: 500;
  font-size: 1.25rem;
}

.feature-description {
  color: #888;
  font-size: 0.75rem;
  font-weight: 300;
  line-height: 1.625;
}

.courses > .section-content {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1rem;
}

.course-item {
  border: 1px solid #333;
  padding: 1rem;
}

.course-item:hover {
  border-color: #555;
}

.course-item > * {
  margin-bottom: 1rem;
}

.course-item .cover {
  width: 100%;
  height: 200px;
}

.course-item .cover img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.course-item .course-content > * {
  margin-bottom: 0.75rem;
}

.course-title {
  font-weight: 500;
}

.course-description {
  color: #888;
  font-size: 0.875rem;
  font-weight: 300;
  line-height: 1.625;
}

.flow > .section-content {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1rem;
}

.flow-item {
  display: flex;
  flex-direction: column;
  align-items: start;
  gap: 1rem;
  padding: 1rem;
  border: 1px solid #333;
  border-style: dashed;
}

.flow-description {
  color: #888;
  font-size: 0.8rem;
  font-weight: 300;
  line-height: 1.625;
}

.cta {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  padding-bottom: 12rem;
}

.cta-title {
  text-align: center;
  font-weight: 500;
}

@media (min-width: 32rem) {
  .features > .section-content {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    margin-bottom: 1.25rem;
  }

  .courses > .section-content {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 64rem) {
  .container {
    padding: 1rem 14rem;
  }

  header {
    max-width: 95rem;
    padding: 1rem 14rem;
    margin: 0 auto;
  }

  .section-content {
    margin-bottom: 4rem;
  }

  section.hero {
    padding-top: 8rem;
  }

  .hero {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .features > .section-content {
    grid-template-columns: repeat(4, minmax(0, 1fr));
    margin-bottom: 1.25rem;
  }

  .courses > .section-content {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .flow > .section-content {
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}
